// Problem 2. Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
// the first 10 terms will be:
//                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
// even-valued terms.

import java.util.ArrayList;

public class p002 {
    public static void main(String[] args) {
        System.out.println(new p002().solve());
    }

    public int solve() {
        ArrayList<Integer> fibonacci = new ArrayList<Integer>();
        fibonacci.add(1);
        fibonacci.add(1);
        int i = 1;
        while (fibonacci.get(i) <= 4_000_000) {
            i++;
            fibonacci.add(i, fibonacci.get(i - 1) + fibonacci.get(i - 2));
        }
        int sum = 0;
        for (Integer number : fibonacci) {
            if (number % 2 == 0) {
                sum += number;
            }
        }
        return sum;
    }
}
